<%
var component = require('/components/component.js');

/**
 * This is just to hold any runtime contexts that need to be passed
 * into components
 * @type {{}}
 */
var context = {};

(function () {
    var log = new Log();

    var compPath = '/components';

    var baseDir = function (comp, path) {
        return compPath + '/' + path;
    };

    var statik = function (req, res, path) {
        //TODO: optimize this
        var file;
        if (path.match(/(.js)$/ig)) {
            //js file
            file = new File(path);
            if (!file.isExists() || file.isDirectory()) {
                return false;
            }
            res.contentType = 'application/javascript';
            print(file.getStream());
            return true;
        }
        if (path.match(/(.css)$/ig)) {
            //css file
            file = new File(path);
            if (!file.isExists() || file.isDirectory()) {
                return false;
            }
            res.contentType = 'text/css';
            print(file.getStream());
            return true;
        }
        if (path.match(/(.jpg)$/ig)) {
            //css file
            file = new File(path);
            if (!file.isExists() || file.isDirectory()) {
                return false;
            }
            res.contentType = 'image/jpeg';
            print(file.getStream());
            return true;
        }
        return false;
    };

    var serve = function (req, res) {
        var file;
        var path = req.getRequestURI();
        var context = req.getContextPath();
        path = path.substring(context.length);
        if (statik(req, res, path)) {
            return;
        }
        //TODO: remove following check
        var compDir = new File(compPath);
        if (!compDir.isExists() || !compDir.isDirectory()) {
            log.error('components directory cannot found');
            return;
        }
        path = find(path);
        if (path) {
            include(path);
            return;
        }
        response.sendError(404, 'Requested endpoint cannot be found');
    };

    var find = function (path) {
        var index;
        var file = new File(path);
        if (file.isExists()) {
            return file.isDirectory() ? dir(path) : path;
        }
        //TODO: is this correct
        path = path + '.jag';
        file = new File(path);
        if (file.isExists()) {
            return file.isDirectory() ? dir(path) : path;
        }
        index = path.lastIndexOf('/');
        if (index === -1) {
            return null;
        }
        path = path.substring(0, index);
        return find(path);
    };

    var dir = function (path) {
        var file = new File(path + '/index.jag');
        //TODO
        return null;
    };

    serve(request, response);
}());
%>